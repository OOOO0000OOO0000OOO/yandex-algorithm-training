/**
 * "D. Выборы Государственной Думы"
 * https://contest.yandex.ru/contest/28970/problems/D/
 * 
 * Статья 83 закона “О выборах депутатов Государственной Думы Федерального Собрания
 * Российской Федерации” определяет следующий алгоритм пропорционального
 * распределения мест в парламенте.
 * Необходимо распределить 450 мест между партиями, участвовавших в выборах. Сначала
 * подсчитывается сумма голосов избирателей, поданных за каждую партию и подсчитывается
 * сумма голосов, поданных за все партии. Эта сумма делится на 450, получается величина,
 * называемая “первое избирательное частное” (смысл первого избирательного частного - это
 * количество голосов избирателей, которое необходимо набрать для получения одного места
 * в парламенте).
 * Далее каждая партия получает столько мест в парламенте, чему равна целая часть от
 * деления числа голосов за данную партию на первое избирательное частное.
 * Если после первого раунда распределения мест сумма количества мест, отданных партиям,
 * меньше 450, то оставшиеся места передаются по одному партиям, в порядке убывания
 * дробной части частного от деления числа голосов за данную партию на первое
 * избирательное частное. Если же для двух партий эти дробные части равны, то
 * преимущество отдается той партии, которая получила большее число голосов.
 * 
 * @param { [String, Number][] } parties список партий, участвовавших в выборах
 * Каждая строка входного файла содержит название партии (строка, возможно, содержащая
 * пробелы), затем, через пробел, количество голосов, полученных данной партией – число,
 * не превосходящее 10^8;
 * 
 * @returns { `${String} ${Number}`[] } названия всех партий и количество голосов в
 * парламенте, полученных данной партией. Названия необходимо выводить в том же порядке,
 * в котором они шли во входных данных.
 */

const countGosdumaPartiesVotes = (parties) => {
  let f = 0;

  for (const party of parties) {
    const [name, votes] = party;
    f += Number(votes);
  }

  f /= 450;

  let stats = {}, firstRound = 450;


  for (const party of parties) {
    const [name, votes] = party;
    const seats = Math.trunc(votes / f);
    const remainder = votes % f;

    stats[name] = { seats, remainder };

    firstRound -= seats;
  }


  if (firstRound) {
    let sortedStats = Object.entries(stats)
      .sort(([_1, stats1], [_2, stats2]) =>
        stats2.remainder - stats1.remainder
          ? stats2.remainder - stats1.remainder
          : stats1.seats - stats2.seats
      )
    for (let i = 0; i < firstRound; i++) {
      const [name] = sortedStats[i];
      stats[name].seats += 1;
    }
  }

  let result = parties.map(
    ([name]) => `${name} ${stats[name].seats}`
  );

  return result;
}