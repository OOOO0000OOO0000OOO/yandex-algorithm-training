/**
 * "E. Форум"
 * https://contest.yandex.ru/contest/28970/problems/E/
 * 
 * Клуб Юных Хакеров организовал на своем сайте форум. Форум имеет следующую структуру:
 * каждое сообщение либо начинает новую тему, либо является ответом на какое-либо
 * предыдущее сообщение и принадлежит той же теме.
 * После нескольких месяцев использования своего форума юных хакеров заинтересовал
 * вопрос - какая тема на их форуме наиболее популярна. Помогите им выяснить это.
 * 
 * @param { Number } n количество сообщений в форуме (1 <= N <= 1000)
 * @param  { ...String[] } messages 
 * Следующие строки содержат описание сообщений в хронологическом порядке.
 * Описание сообщения, которое представляет собой начало новой темы, состоит из трех
 * строк. Первая строка содержит число 0. Вторая строка содержит название темы. Длина
 * названия не превышает 30 символов. Третья строка содержит текст сообщения.
 * Описание сообщения, которое является ответом на другое сообщение, состоит из двух
 * строк. Первая строка содержит целое число - номер сообщения, ответом на которое оно
 * является. Сообщения нумеруются, начиная с единицы. Ответ всегда появляется позже, чем
 * сообщение, ответом на которое он является. Вторая строка содержит текст сообщения.
 * Длина каждого из сообщений не превышает 100 символов.
 * 
 * @returns { String } название темы, к которой относится наибольшее количество сообщений
 */

const findMostRepliedTopic = (n, ...messages) => {
  let replies = new Array(n).fill(0);
  let topics = new Array(n).fill('');

  for (let i = 0; i < n; i++) {
    const num = messages[0];
    if (num === '0') {
      replies[i] = i;
      topics[i] = messages[1];
      messages.splice(0, 3);
    } else {
      replies[i] = replies[num - 1];
      messages.splice(0, 2);
    }
  }

  let countReplies = {};

  for (reply of replies) {
    countReplies[reply] = (countReplies[reply] ?? 0) + 1;
  }

  const result = Object.keys(countReplies).sort(
    (reply1, reply2) =>
      countReplies[reply2] - countReplies[reply1]
        ? countReplies[reply2] - countReplies[reply1]
        : reply1 - reply2,
  )[0];

  return topics[result];
}

export default findMostRepliedTopic;
