/**
 * "5. Хорошая строка"
 * https://contest.yandex.ru/contest/45468/problems/5/
 * 
 * На день рождения маленький Ипполит получил долгожданный подарок — набор дощечек с
 * написанными на них буквами латинского алфавита. Теперь-то ему будет чем заняться
 * долгими вечерами, тем более что мама обещала подарить ему в следующем году
 * последовательность целых неотрицательных чисел, если он хорошо освоит этот набор.
 * Ради такого богатства Ипполит готов на многое.
 * Прямо сейчас юный исследователь полностью поглощён изучением хорошести строк.
 * Хорошестью строки называется количество позиций от 1 до L - 1 (где L — длина строки),
 * таких, что следующая буква в строке является следующей по алфавиту. Например,
 * хорошесть строки "abcdefghijklmnopqrstuvwxyz" равна 25, а строки "abdc" — только 1.
 * Ипполит размышляет над решением закономерно возникающей задачи: чему равна
 * максимально возможная хорошесть строки, которую можно собрать, используя дощечки из
 * данного набора? Вы-то и поможете ему с ней справиться.
 * 
 * @param { Number } n количество различных букв в наборе (1 ≤ N ≤ 26)
 * Обратите внимание: в наборе всегда используются N первых букв латинского алфавита.
 * @param { Number[] } letters 
 * Следующие N строк содержат целые положительные числа c_i — количество букв
 * соответствующего типа (1 ≤ c_i ≤ 10^9). Таким образом, первое число означает количество букв
 * "a", второе число задаёт количество букв "b" и так далее
 * 
 * @returns { Number } максимально возможная хорошесть строки, которую можно собрать из
 * имеющихся дощечек.
 */

const findMaxGoodness = (n, letters) => {
  let answer = 0;

  for (let i = 0; i < n - 1; i += 1) {
    answer += Math.min(letters[i], letters[i + 1]);
  }

  return answer;
}

const fs = require('fs');
const data = fs.readFileSync('input.txt', {
  encoding: 'utf-8',
});
const [n, ...set] = data
  .trim()
  .split('\n')
  .map(Number);

const result = findMaxGoodness(n, set);

fs.writeFileSync('output.txt', result.toString());